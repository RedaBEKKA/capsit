[{"D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\index.js":"1","D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\reportWebVitals.js":"2","D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\App.js":"3","D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\services\\i18n.js":"4","D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\store\\reducers\\auth.js":"5","D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\store\\reducers\\snackbar.js":"6","D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\services\\interceptor.js":"7","D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\pages\\error\\NotFound.js":"8","D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\pages\\home\\Home.js":"9","D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\services\\utility.js":"10","D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\pages\\auth\\forgotPassword\\ForgotPassword.js":"11","D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\pages\\auth\\login\\Login.js":"12","D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\pages\\auth\\newPassword\\NewPassword.js":"13","D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\store\\action-creators\\index.js":"14","D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\componenets\\layouts\\public-layout\\publicLayout.js":"15","D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\componenets\\layouts\\private-layout\\PrivateLayout.js":"16","D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\store\\action-creators\\action-types.js":"17","D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\componenets\\snackbar\\snackbar.js":"18","D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\componenets\\table\\tableExemple.js":"19","D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\componenets\\table\\tableToolbar\\tableToolbar.js":"20","D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\services\\Storage.js":"21","D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\store\\action-creators\\snackbar.js":"22","D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\store\\action-creators\\auth.js":"23","D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\componenets\\sidebar\\sidebar.js":"24","D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\componenets\\header\\Header.js":"25","D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\componenets\\Breadcrumb\\index.js":"26","D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\componenets\\table\\capsitTable.js":"27","D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\componenets\\table\\celleType\\detailButton.js":"28","D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\componenets\\table\\tablePagination\\tablePagination.js":"29","D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\componenets\\table\\celleType\\actions.js":"30","D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\componenets\\table\\tableHeader\\tableHeader.js":"31"},{"size":1199,"mtime":1644091777312,"results":"32","hashOfConfig":"33"},{"size":375,"mtime":1644091777328,"results":"34","hashOfConfig":"33"},{"size":2690,"mtime":1644091777256,"results":"35","hashOfConfig":"33"},{"size":1096,"mtime":1644091777329,"results":"36","hashOfConfig":"33"},{"size":1772,"mtime":1644091777333,"results":"37","hashOfConfig":"33"},{"size":883,"mtime":1644091777333,"results":"38","hashOfConfig":"33"},{"size":2682,"mtime":1644091777329,"results":"39","hashOfConfig":"33"},{"size":269,"mtime":1644091777326,"results":"40","hashOfConfig":"33"},{"size":1247,"mtime":1644091777327,"results":"41","hashOfConfig":"33"},{"size":341,"mtime":1644091777330,"results":"42","hashOfConfig":"33"},{"size":3129,"mtime":1644091777314,"results":"43","hashOfConfig":"33"},{"size":4187,"mtime":1644140242858,"results":"44","hashOfConfig":"33"},{"size":6747,"mtime":1644177675769,"results":"45","hashOfConfig":"33"},{"size":140,"mtime":1644091777332,"results":"46","hashOfConfig":"33"},{"size":1926,"mtime":1644140184057,"results":"47","hashOfConfig":"33"},{"size":918,"mtime":1644091777301,"results":"48","hashOfConfig":"33"},{"size":848,"mtime":1644091777331,"results":"49","hashOfConfig":"33"},{"size":1679,"mtime":1644140270341,"results":"50","hashOfConfig":"33"},{"size":2711,"mtime":1644091777308,"results":"51","hashOfConfig":"33"},{"size":1946,"mtime":1644091777311,"results":"52","hashOfConfig":"33"},{"size":499,"mtime":1644140207025,"results":"53","hashOfConfig":"33"},{"size":425,"mtime":1644091777332,"results":"54","hashOfConfig":"33"},{"size":3219,"mtime":1644140238045,"results":"55","hashOfConfig":"33"},{"size":2422,"mtime":1644091777304,"results":"56","hashOfConfig":"33"},{"size":1602,"mtime":1644091777300,"results":"57","hashOfConfig":"33"},{"size":337,"mtime":1644091777298,"results":"58","hashOfConfig":"33"},{"size":5358,"mtime":1644091777307,"results":"59","hashOfConfig":"33"},{"size":655,"mtime":1644091777308,"results":"60","hashOfConfig":"33"},{"size":545,"mtime":1644091777310,"results":"61","hashOfConfig":"33"},{"size":1822,"mtime":1644091777307,"results":"62","hashOfConfig":"33"},{"size":2893,"mtime":1644091777309,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"80jhx3",{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"66"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"66"},"D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\index.js",[],["140","141"],"D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\reportWebVitals.js",[],"D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\App.js",["142"],"import React, { Suspense, useEffect } from 'react';\r\n//import classes from './App.scss';\r\nimport PrivateLayout from './componenets/layouts/private-layout/PrivateLayout';\r\nimport { PublicLayout } from './componenets/layouts/public-layout/publicLayout'\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport withErrorHandler from './services/interceptor';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport * as action from './store/action-creators'\r\nimport NotFound from './pages/error/NotFound.js'\r\n\r\nconst Login = React.lazy(() => import('./pages/auth/login/Login'));\r\nconst ForgotPassword = React.lazy(() => import('./pages/auth/forgotPassword/ForgotPassword'));\r\nconst NewPassword = React.lazy(() => import('./pages/auth/newPassword/NewPassword'));\r\n// const Register = React.lazy(() => import('./pages/auth/signup/register/Register'));\r\nconst Home = React.lazy(() => import('./pages/home/Home'));\r\nfunction App(props) {\r\n\r\n  const isAuthenticated = useSelector(state => !!state.auth.token)\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(action.authCheckState())\r\n  }, [dispatch, isAuthenticated])\r\n\r\n  \r\n  const isAuth = false\r\n  let routes = <PublicLayout>\r\n    <Routes>\r\n      <Route path=\"/\" page={\"login\"} element={<Login />} />\r\n       <Route path='/forgot_password' element={<ForgotPassword />} />\r\n      <Route path='/new_password' element={<NewPassword />} />\r\n       {/*<Route path='/register' element={<Register />} /> */}\r\n\r\n    </Routes>\r\n  </PublicLayout>\r\n  if (isAuth) {\r\n    routes = <PrivateLayout>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Home />} />\r\n        <Route path=\"/about\" element={<Home />} />\r\n      </Routes>\r\n    </PrivateLayout>\r\n  }\r\n\r\n  return (\r\n    <div className='app_container'>\r\n\r\n      <Suspense fallback={<div>Chargement...</div>}>\r\n        {isAuthenticated ?\r\n          <PrivateLayout>\r\n            <Routes>\r\n              <Route path=\"/\" element={<Home />} />\r\n              <Route path=\"/dashboard\" element={<Home />} />\r\n              <Route path=\"/machines\" element={<Home />} />\r\n            </Routes>\r\n          </PrivateLayout>\r\n          :\r\n          <PublicLayout>\r\n            <Routes>\r\n              <Route path=\"/\" page={'login'} element={<Login />} />\r\n              <Route path='/forgot_password' element={<ForgotPassword />} />\r\n              <Route path='/new_password' element={<NewPassword />} />\r\n             {/*<Route path='/register' element={<Register />} />  */}\r\n              <Route path='*' element={<NotFound />} />\r\n\r\n\r\n            </Routes>\r\n          </PublicLayout>\r\n        }\r\n      </Suspense>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default withErrorHandler(App);\r\n","D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\services\\i18n.js",[],"D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\store\\reducers\\auth.js",[],"D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\store\\reducers\\snackbar.js",[],"D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\services\\interceptor.js",["143"],"import React from 'react';\r\nimport { SnackbarAlert } from '../componenets/snackbar/snackbar'\r\nimport { useDispatch } from 'react-redux'\r\nimport * as action from '../store/action-creators'\r\nimport axios from 'axios'\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n\r\nconst withErrorHandler = (WrappedComponent) => {\r\n    return (props) => {\r\n        const { t } = useTranslation(['common', 'home','login'])\r\n        const dispatch = useDispatch()\r\n        axios.interceptors.request.use(function (config) {\r\n            // Do something before request is sent\r\n            return config;\r\n        }, function (error) {\r\n            // Do something with request error\r\n            return Promise.reject(error);\r\n        });\r\n        axios.interceptors.response.use(function (response) {\r\n            // Any status code that lie within the range of 2xx cause this function to trigger\r\n            // Do something with response data\r\n            return response;\r\n        }, function (error) {\r\n            if (error.response) {\r\n                const { status } = error.response\r\n                switch (status) {\r\n                    case 400: {\r\n                        dispatch(action.openSnackBar('succes message', 'error'));\r\n                    }\r\n                        break;\r\n                    case 401:\r\n                        dispatch(action.openSnackBar('errorMessage401', 'error'));\r\n                        break;\r\n                    case 403:\r\n                        dispatch(action.openSnackBar('errorMessage403', 'error'));\r\n                        break;\r\n                    case 404:\r\n                        dispatch(action.openSnackBar(t('errorMessage404'), 'error'));\r\n                        break;\r\n                    case 500:\r\n                        dispatch(action.openSnackBar('errorMessage500', 'error'));\r\n                        break;\r\n                    case 502:\r\n                        dispatch(action.openSnackBar('errorMessage502', 'error'));\r\n                        break;\r\n                    case 504:\r\n                        dispatch(action.openSnackBar('errorMessage504', 'error'));\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n\r\n\r\n\r\n            }\r\n            // Any status codes that falls outside the range of 2xx cause this function to trigger\r\n            // Do something with response error\r\n            return Promise.reject(error);\r\n        });\r\n\r\n\r\n\r\n        return (\r\n            <>\r\n                <SnackbarAlert />\r\n                <WrappedComponent {...props} />\r\n            </>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default withErrorHandler;\r\n\r\n\r\n","D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\pages\\error\\NotFound.js",["144"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst NotFound = props => {\r\n    return (\r\n        <div>\r\n\r\n            Error 404 page not found\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nNotFound.propTypes = {\r\n    \r\n};\r\n\r\nexport default NotFound;","D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\pages\\home\\Home.js",["145","146","147"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport TableExemple from \"../../componenets/table/tableExemple\";\r\nimport classes from './home.module.scss'\r\nimport Breadcrumb from '../../componenets/Breadcrumb'\r\nimport { Box, Button, Divider, Paper } from '@mui/material';\r\nimport { EnhancedTableToolbar } from '../../componenets/table/tableToolbar/tableToolbar'\r\n\r\n\r\n\r\nconst Home = props => {\r\n    const { t } = useTranslation(['home'])\r\n    const date = new Date();\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className={classes.home_container}>\r\n            <Breadcrumb title={'Dashbord'} />\r\n            <Box sx={{ width: '100%' }}>\r\n                <Paper sx={{ width: '100%', mb: 2 }}>\r\n                    <EnhancedTableToolbar title={'toolbar title'} >\r\n                        <Button size=\"small\" color=\"success\" variant=\"outlined\"\r\n                        >\r\n                            Inviter\r\n                        </Button>\r\n\r\n                    </EnhancedTableToolbar>\r\n                    <Divider />\r\n\r\n                    <TableExemple />\r\n\r\n                </Paper>\r\n            </Box>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nHome.propTypes = {\r\n\r\n};\r\n\r\nexport default Home;","D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\services\\utility.js",[],"D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\pages\\auth\\forgotPassword\\ForgotPassword.js",["148"],"import React, { useState } from \"react\";\r\nimport { Button} from \"@mui/material\";\r\nimport { useNavigate } from 'react-router-dom'\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\n\r\nimport logo from \"../../../assets/logo.png\";\r\nimport classes from './forgotPassword.module.scss'\r\n\r\nimport * as actions from '../../../store/action-creators/index';\r\nimport {  useDispatch } from \"react-redux\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Formik,Form, Field} from \"formik\";\r\nimport { TextField } from \"formik-material-ui\"\r\nimport * as Yup from \"yup\"\r\n\r\nconst ForgotPassword = () => {\r\n    \r\n  const { t } = useTranslation(['login'])\r\n  const navigate =useNavigate()\r\n  const handleClick = () => {\r\n    navigate('/');\r\n \r\n  }\r\n    //Data\r\n    const initialValues = {\r\n      email: \"\",\r\n    }\r\n  \r\n    const [state, setState] = useState(initialValues);\r\n  \r\n     //validation schema\r\n    let validationSchema = Yup.object().shape({\r\n      email: Yup.string().email(\"Invalid email\").required(\"Email is required\")\r\n      \r\n    })\r\n\r\n  let dispatch=useDispatch()\r\n  const onSubmit= (values) => {\r\n    console.log(values,'values')\r\n    dispatch(actions.forgotPassword(values))\r\n  }\r\n\r\n    return (\r\n        <div\r\n          className= {classes.forgotPass_login}\r\n        >\r\n        <div\r\n          className={classes.forgotPass_container}\r\n        >\r\n        <div className=\"\">\r\n          <img\r\n            className={classes.forgotPass_logo}\r\n            src={logo}\r\n            alt=\"logo\"\r\n          />\r\n        </div>\r\n        <div\r\n          className={classes.forgotPass_form}\r\n        >\r\n        <ArrowBackIcon \r\n        className={classes.forgotPass_icon}\r\n        onClick={() => handleClick()}  />\r\n          <div\r\n            className={classes.forgotPass_title}\r\n          >\r\n            {t('titleForgotPassword')}\r\n          </div>\r\n\r\n          <div  className={classes.forgotPass_email_title} >\r\n          {t('textForgotPassword')}\r\n          </div>\r\n          <div\r\n          className={classes.forgotPass_reset_password}\r\n          > \r\n          {t('textForgotPasswordDetails')}\r\n          </div>\r\n          <Formik \r\n            initialValues={state}\r\n            validationSchema={validationSchema}\r\n            onSubmit={(values) =>onSubmit(values)}\r\n          >\r\n          {({ values}) => {\r\n            \r\n          return (\r\n          <Form autoComplete=\"on\" style={{margin:40}}>\r\n            <Field\r\n             className={classes.textField}\r\n              variant=\"standard\"\r\n              id=\"email\"\r\n              label={t('mailAddress')}\r\n              name=\"email\"\r\n              value={values.email}\r\n              type=\"email\"\r\n              component={TextField}\r\n            />\r\n            <br/>\r\n            <Button\r\n              className={classes.forgotPass_button}\r\n              variant=\"outlined\"\r\n              type=\"submit\"\r\n            >\r\n              {t('submit')}\r\n            </Button>\r\n            \r\n          </Form>\r\n          )\r\n          }}\r\n          </Formik>\r\n        </div>\r\n       \r\n      </div>\r\n     \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ForgotPassword\r\n","D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\pages\\auth\\login\\Login.js",["149"],"import React, { useState } from \"react\";\r\nimport { Button} from \"@mui/material\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// import ImageConnexion from \"../../../assets/ImageConnexion.png\";\r\nimport logo from \"../../../assets/logo.png\";\r\nimport classes from './login.module.scss';\r\n\r\nimport * as actions from '../../../store/action-creators/index';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Formik,Form, Field} from \"formik\";\r\nimport { TextField } from \"formik-material-ui\"\r\nimport * as Yup from \"yup\"\r\n\r\nconst Login = () => {\r\n  const { t } = useTranslation(['login'])\r\n  let dispatch = useDispatch()\r\n \r\n  //Data\r\n  const initialValues = {\r\n    email: \"\",\r\n    password: \"\",\r\n    \r\n  }\r\n\r\n  const [state, setState] = useState(initialValues);\r\n  \r\n  //password validation\r\n  const lowercaseRegEx = /(?=.*[a-z])/\r\n  const uppercaseRegEx = /(?=.*[A-Z])/\r\n  const numericRegEx = /(?=.*[0-9])/\r\n  const lengthRegEx = /(?=.{8,})/\r\n  const specialsRegEx = /[^A-Za-z 0-9]/g;\r\n  //validation schema\r\n  let validationSchema = Yup.object().shape({\r\n    email: Yup.string().email(\"Invalid email\").required(\"Email is required\"),\r\n    password: Yup.string()\r\n      .matches(\r\n        lowercaseRegEx,\r\n        \"Must contain one lowercase alphabetical character!\"\r\n      )\r\n      .matches(\r\n        uppercaseRegEx,\r\n        \"Must contain one uppercase alphabetical character!\"\r\n      )\r\n      .matches(numericRegEx, \"Must contain one numeric character!\")\r\n      .matches(lengthRegEx, \"Must contain at least 8 characters!\")\r\n      .matches(specialsRegEx,\"Must contain one special caracter\")\r\n      .required(\"Password is required\"),\r\n  })\r\n\r\n  const onSubmit = (values) => {\r\n      // console.log(values,' values')\r\n      dispatch(actions.auth(values))\r\n   }\r\n   \r\n    \r\n  return (\r\n    <div className={classes.login}>\r\n\r\n      <div className={classes.login_container}>\r\n        <div>\r\n          <img \r\n            className={classes.login_image}\r\n            src={logo}\r\n            alt=\"logo\"\r\n            \r\n          />\r\n        </div>\r\n         <div\r\n          className={classes.login_form}\r\n        >\r\n        \r\n          <div\r\n            className={classes.login_title}\r\n          >\r\n            {t('title')}\r\n          </div>\r\n          <Formik \r\n            initialValues={state}\r\n            validationSchema={validationSchema}\r\n            onSubmit={(values) =>onSubmit(values)}\r\n          >\r\n          {({ values}) => {\r\n            \r\n          return (\r\n          <Form  autoComplete=\"on\" style={{ margin: 40 }}>\r\n            <Field\r\n              className={classes.textField}\r\n              variant=\"standard\"\r\n              id=\"email\"\r\n              label={t('email')}\r\n              name=\"email\"\r\n              value={values.email}\r\n              type=\"email\"\r\n              component={TextField}\r\n              />\r\n            <br />\r\n            <Field\r\n              className={classes.textField}\r\n              variant=\"standard\"\r\n              id=\"password\"\r\n              label={t('password')}\r\n              name=\"password\"\r\n              value={values.password}\r\n              type=\"password\"\r\n              component={TextField}\r\n              \r\n            />\r\n            <br />\r\n\r\n            <Link\r\n              to=\"/forgot_password\"\r\n              className={classes.login_link_forgot_password}\r\n            >\r\n              {t('forgotPassword')}\r\n            </Link>\r\n            <br />\r\n            <Button \r\n              variant=\"outlined\"\r\n              className={classes.button_login}\r\n              type=\"submit\"\r\n              >\r\n              {t('signin')}\r\n            </Button>\r\n            <br />\r\n            <div\r\n              className={classes.login_compte}\r\n            >\r\n              {t('account')}\r\n              <Link\r\n                to=\"/register\"\r\n                className={classes.login_link_signup}\r\n               \r\n              >\r\n                {t('signup')}\r\n              </Link>\r\n            </div>\r\n\r\n            \r\n          </Form>\r\n          )\r\n          }}\r\n          </Formik>\r\n        </div> \r\n\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\pages\\auth\\newPassword\\NewPassword.js",["150","151","152","153","154","155"],"D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\store\\action-creators\\index.js",[],"D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\componenets\\layouts\\public-layout\\publicLayout.js",["156","157"],"import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport i18next from 'i18next';\r\nimport classes from './publicLayout.module.scss';\r\nimport { getCurrentLangue } from \"../../../services/Storage\"\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nexport const PublicLayout = props => {\r\n    const [lang, setLang] = useState(getCurrentLangue() === 'fr' ?'en': 'fr');\r\n    const { t } = useTranslation(['common'])\r\n    const  page  = props.children.props.children.props\r\n\r\n\r\n    const footerContent = [\r\n        { name: t('about'), to: '/aprops' },\r\n        { name: t('privacy'), to: '/aprops' },\r\n        { name: t('condition'), to: '/aprops' },\r\n        { name: t('contact'), to: '/aprops' }\r\n    ]\r\n\r\n    \r\n    // console.log(props,'mes props')\r\n    // console.log(page)\r\n\r\n    const goTo = (to) => {\r\n        // to do \r\n    }\r\n    const changeLang = () => {\r\n        i18next.changeLanguage(lang)\r\n        setLang(lang==='fr'?'en':'fr');\r\n    };\r\n\r\n\r\n\r\n    const renderFooter = () => {\r\n        return footerContent.map((item, index) => {\r\n            return <div onClick={() => goTo(item.to)} className={classes.fotter_item} key={index}> {item.name}</div>\r\n\r\n        }\r\n        )\r\n    }\r\n    return (\r\n        <div className={classes.public_layout}>\r\n            <div className={classes.public_page_container}  >\r\n                <div className={classes.public_header}>\r\n                    <div> {t('back')} <span > capsit.fr</span></div>\r\n                    <span onClick={()=>changeLang()}> {lang === 'fr' ? 'EN' : 'FR'}</span>\r\n                </div>\r\n\r\n                <div className={classes.public_page_content}>\r\n                    {props.children}\r\n                </div>\r\n                <div className={classes.public_footer}>\r\n                    {renderFooter()}\r\n                </div>\r\n\r\n\r\n            </div >\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nPublicLayout.propTypes = {\r\n\r\n};\r\n\r\n","D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\componenets\\layouts\\private-layout\\PrivateLayout.js",["158"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classes from './privateLayout.module.scss'\r\nimport {Sidebar} from '../../sidebar/sidebar'\r\nimport { Header } from '../../header/Header'\r\n\r\n\r\n\r\n\r\nconst PrivateLayout = props => {\r\n    let open = false\r\n\r\n    const openSidebar = () => {\r\n      \r\n        open = !open\r\n        const sidebar =document.getElementById('sidebar')\r\n        open ? sidebar.classList.remove(classes.close) : sidebar.classList.add(classes.close);\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={classes.private_page_container}>\r\n            <Sidebar  openSidebar={openSidebar} open={open} />\r\n            < div className={classes.page_container}>\r\n                <Header />\r\n                <div className={classes.page_content}>\r\n                    {props.children}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default PrivateLayout;","D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\store\\action-creators\\action-types.js",[],"D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\componenets\\snackbar\\snackbar.js",["159","160"],"import React, { useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport classes from \"./snackBar.module.scss\"\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as actions from '../../store/action-creators'\r\n\r\n\r\n\r\nexport const SnackbarAlert = props => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { message, openSnackbar, snakbarType } = useSelector(\r\n        state => state.ui\r\n    );\r\n\r\n    const handleClose = () => {\r\n        dispatch(actions.closSnackBar());\r\n    }\r\n\r\n    const action = (\r\n        <>\r\n\r\n            <IconButton\r\n                size=\"small\"\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                onClick={handleClose}\r\n            >\r\n                <CloseIcon fontSize=\"small\" />\r\n            </IconButton>\r\n        </>\r\n    );\r\n    // console.log(message, openSnackbar, snakbarType)\r\n    return (\r\n        <>\r\n            <Snackbar\r\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                open={openSnackbar}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose}\r\n                action={action}\r\n                ContentProps={{\r\n                    \"aria-describedby\": \"message-id\",\r\n                    className: classes[snakbarType],\r\n                }}\r\n                message={\r\n                    <span id=\"message-id\" >\r\n                        <div>{message}</div>\r\n                    </span>\r\n                }\r\n            />\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\n","D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\componenets\\table\\tableExemple.js",["161","162","163"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CapsitTable } from './capsitTable';\r\n\r\nconst TableExemple = props => {\r\n    const [order, setOrder] = React.useState('asc');\r\n    const [orderBy, setOrderBy] = React.useState('fisrtName');\r\n    const [selected, setSelected] = React.useState([]);\r\n    const [pageSize, setPageSize] = React.useState(20);\r\n    const [page, setPage] = React.useState(0);\r\n    const [totalItem, setTotalItem] = React.useState(60)\r\n\r\n    const columns = [\r\n        { id: 'id', label: 'id', numeric: false, disablePadding: true, type: 'checkbox', sortable: false, width: 100 },\r\n        { id: 'fisrtName', label: 'Nom', numeric: false, disablePadding: true, type: 'text', sortable: true, align: 'center', width: 100 },\r\n        { id: 'lastName', label: 'Prénom', numeric: false, disablePadding: true, type: 'text', sortable: true, width: 100 },\r\n        { id: 'age', label: 'Age', numeric: false, disablePadding: true, type: 'text', sortable: false, width: 100 },\r\n        { id: 'action', label: 'Action', type: 'action', width: 200 },\r\n        { id: 'details', label: 'Détails', type: 'detail', align: 'center', width: 100 }\r\n    ]\r\n    const rows = [\r\n        { id: 1, fisrtName: 'khelil', lastName: 'tarik', age: 25 },\r\n        { id: 2, fisrtName: 'mhd', lastName: 'ibra', age: 20 },\r\n        { id: 3, fisrtName: 'tebani', lastName: 'moh', age: 19 },\r\n    ]\r\n    const actions = [\r\n        { name: 'delete', onClicked: (id) => { console.log('ici delete') }, type: 'delete' },\r\n        { name: 'edit', onClicked: (id) => { console.log('ici edit') }, type: 'edit' },\r\n        { name: 'add', onClicked: (id) => { console.log('ici add') }, type: 'add' },\r\n        { name: 'detail', onClicked: (id) => { console.log('ici detaile') }, type: 'more' }\r\n\r\n    ]\r\n    const onSortColumn = (sort, dir) => {\r\n        setOrderBy(sort);\r\n        setOrder(dir);\r\n    }\r\n    const onChangePage = (p) => {\r\n        setPage(p)\r\n    }\r\n    const onSelectedItem = (selectedItem) => {\r\n        setSelected(selectedItem);\r\n\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <CapsitTable\r\n                columns={columns}\r\n                rows={rows}\r\n                actions={actions}\r\n                onSortColumn={onSortColumn}\r\n                order={order}\r\n                orderBy={orderBy}\r\n                onSelectedItem={onSelectedItem}\r\n                selectedItem={selected}\r\n                title={'Table title'}\r\n                page={page}\r\n                pageSize={pageSize}\r\n                totalItem={totalItem}\r\n                onPageChange={onChangePage} />\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nTableExemple.propTypes = {\r\n\r\n};\r\n\r\nexport default TableExemple;","D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\componenets\\table\\tableToolbar\\tableToolbar.js",[],"D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\services\\Storage.js",[],"D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\store\\action-creators\\snackbar.js",[],"D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\store\\action-creators\\auth.js",[],"D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\componenets\\sidebar\\sidebar.js",["164","165"],"\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classes from '../layouts/private-layout/privateLayout.module.scss'\r\nimport Icon from '@mui/material/Icon';\r\nimport { Link, useLocation, useMatch } from 'react-router-dom'\r\n\r\n\r\nexport const Sidebar = ({ open, openSidebar, ...props }) => {\r\n    const location = useLocation();\r\n    const isActive = (link) => {\r\n        return location.pathname === link\r\n    }\r\n\r\n    const CapstitConextNavigation = [\r\n        { name: 'Dashboard', to: '/dashboard', icon: 'dashboard', },\r\n        { name: 'Machines', to: '/machines', icon: 'home' },\r\n        { name: 'Sites', to: '/sites', icon: 'home' },\r\n        { name: 'Recettes', to: '/recettes', icon: 'receipt' },\r\n        { name: 'Comptes client', to: '/comptes_client', icon: 'groups' },\r\n        { name: 'Factures', to: '/factures', icon: 'monetization_on' },\r\n        { name: 'SAV', to: '/sAV', icon: 'monetization_on' },\r\n    ]\r\n    return (\r\n        <nav id=\"sidebar\" className={`${classes.sidebar} ${classes.close}`}>\r\n            <header>\r\n                <div className={`${classes.image_text}`} onClick={openSidebar}>\r\n                    <span className={`${classes.image}`}>\r\n                        <img src={require('../../assets/capsit_logo.png')} alt=\"alt\" />\r\n\r\n                    </span>\r\n\r\n                    <div className={`${classes.text} ${classes.logo_text}`}>\r\n                        <span className={`${classes.name}`}>Capsit</span>\r\n                        <span className={`${classes.profession}`}>khelil tarik</span>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </header>\r\n\r\n            <div className={classes.menu_bar}>\r\n                <div className={classes.menu}>\r\n                    <ul className={classes.menu_links}>\r\n                        {CapstitConextNavigation.map((item, index) => <li key={index}>\r\n                            <Link to={item.to}\r\n                                className={isActive(item.to) ? classes.active : ''}>\r\n                                <Icon className={classes.icon} > {item.icon}</Icon>\r\n\r\n                                <span className={classes.text} >{item.name}</span>\r\n                            </Link>\r\n                        </li>)\r\n\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </div >\r\n        </nav >\r\n    );\r\n};\r\n\r\nSidebar.propTypes = {\r\n\r\n};\r\n","D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\componenets\\header\\Header.js",[],"D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\componenets\\Breadcrumb\\index.js",[],"D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\componenets\\table\\capsitTable.js",[],"D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\componenets\\table\\celleType\\detailButton.js",[],"D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\componenets\\table\\tablePagination\\tablePagination.js",[],"D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\componenets\\table\\celleType\\actions.js",["166","167"],"// actions\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Stack, Button, IconButton, Menu, MenuItem, } from '@mui/material';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nexport const TableActions = ({ actions, rowData }) => {\r\n    actions = actions.filter(action => action.type !== 'more')\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    return (\r\n        <div>\r\n            <IconButton\r\n                aria-label=\"more\"\r\n                id=\"long-button\"\r\n                aria-controls={open ? 'long-menu' : undefined}\r\n                aria-expanded={open ? 'true' : undefined}\r\n                aria-haspopup=\"true\"\r\n                onClick={handleClick}\r\n            >\r\n                <MoreVertIcon />\r\n            </IconButton>\r\n            <Menu\r\n                id=\"long-menu\"\r\n                MenuListProps={{\r\n                    'aria-labelledby': 'long-button',\r\n                }}\r\n                anchorEl={anchorEl}\r\n                open={open}\r\n                onClose={handleClose}\r\n                PaperProps={{\r\n                    style: {\r\n                        width: '20ch',\r\n                    },\r\n                }}\r\n            >\r\n                {actions.map((act, index) => (\r\n                    <MenuItem key={index} onClick={() => { act.onClicked(rowData); handleClose(); }}>\r\n                        {act.name}\r\n                    </MenuItem>\r\n                ))}\r\n            </Menu>\r\n        </div>\r\n    );\r\n};\r\nTableActions.propTypes = {\r\n    actions: PropTypes.array.isRequired,\r\n    rowData: PropTypes.any.isRequired,\r\n\r\n};","D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\src\\componenets\\table\\tableHeader\\tableHeader.js",["168"],"import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { visuallyHidden } from '@mui/utils';\r\nimport {\r\n   Box,  TableCell, TableHead, \r\n    TableRow, TableSortLabel, Checkbox\r\n} from '@mui/material';\r\n// table header \r\nexport function EnhancedTableHead(props) {\r\n    const { onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, headCells } =\r\n        props;\r\n    const createSortHandler = (orderBy) => (event) => {\r\n        const dir = orderBy === orderBy && order === 'asc' ? 'desc' : 'asc';\r\n\r\n        onRequestSort(orderBy, dir);\r\n    };\r\n\r\n\r\n\r\n    const renderColumnByType = (headCell) => {\r\n        switch (headCell.type) {\r\n            case 'checkbox': return (\r\n                <Checkbox\r\n                    color=\"primary\"\r\n                    indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                    checked={rowCount > 0 && numSelected === rowCount}\r\n                    onChange={onSelectAllClick}\r\n                    inputProps={{\r\n                        'aria-label': 'select all desserts',\r\n                    }}\r\n                />\r\n            )\r\n\r\n            default: return headCell.label\r\n        }\r\n\r\n\r\n    }\r\n    const renderColumnBySort = (headCell) => {\r\n        if (headCell.sortable) {\r\n            return <TableSortLabel\r\n                active={orderBy === headCell.id}\r\n                direction={orderBy === headCell.id ? order : 'asc'}\r\n                onClick={createSortHandler(headCell.id)}\r\n            >\r\n                {renderColumnByType(headCell)}\r\n                {orderBy === headCell.id ? (\r\n                    <Box component=\"span\" sx={visuallyHidden}>\r\n                        {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                    </Box>\r\n                ) : null}\r\n            </TableSortLabel>\r\n\r\n\r\n        } else {\r\n            return renderColumnByType(headCell)\r\n\r\n        }\r\n\r\n    }\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                {headCells.map((headCell) => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        align={headCell.align ?? 'left'}\r\n                        padding={headCell.disablePadding ? 'none' : 'normal'}\r\n                        sortDirection={orderBy === headCell.id ? order : false}\r\n                    >\r\n                        {renderColumnBySort(headCell)}\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n    numSelected: PropTypes.number.isRequired,\r\n    onRequestSort: PropTypes.func.isRequired,\r\n    onSelectAllClick: PropTypes.func.isRequired,\r\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n    rowCount: PropTypes.number.isRequired,\r\n    headCells: PropTypes.array.isRequired\r\n};",{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":37,"column":5,"nodeType":"175","messageId":"176","endLine":37,"endColumn":11},{"ruleId":"177","severity":1,"message":"178","line":28,"column":31,"nodeType":"179","messageId":"180","endLine":30,"endColumn":22},{"ruleId":"173","severity":1,"message":"181","line":2,"column":8,"nodeType":"175","messageId":"176","endLine":2,"endColumn":17},{"ruleId":"173","severity":1,"message":"181","line":2,"column":8,"nodeType":"175","messageId":"176","endLine":2,"endColumn":17},{"ruleId":"173","severity":1,"message":"182","line":13,"column":13,"nodeType":"175","messageId":"176","endLine":13,"endColumn":14},{"ruleId":"173","severity":1,"message":"183","line":14,"column":11,"nodeType":"175","messageId":"176","endLine":14,"endColumn":15},{"ruleId":"173","severity":1,"message":"184","line":29,"column":19,"nodeType":"175","messageId":"176","endLine":29,"endColumn":27},{"ruleId":"173","severity":1,"message":"184","line":28,"column":17,"nodeType":"175","messageId":"176","endLine":28,"endColumn":25},{"ruleId":"173","severity":1,"message":"185","line":1,"column":27,"nodeType":"175","messageId":"176","endLine":1,"endColumn":36},{"ruleId":"173","severity":1,"message":"184","line":21,"column":17,"nodeType":"175","messageId":"176","endLine":21,"endColumn":25},{"ruleId":"173","severity":1,"message":"186","line":22,"column":10,"nodeType":"175","messageId":"176","endLine":22,"endColumn":16},{"ruleId":"173","severity":1,"message":"187","line":22,"column":18,"nodeType":"175","messageId":"176","endLine":22,"endColumn":27},{"ruleId":"173","severity":1,"message":"188","line":29,"column":9,"nodeType":"175","messageId":"176","endLine":29,"endColumn":10},{"ruleId":"189","severity":1,"message":"190","line":116,"column":44,"nodeType":"191","messageId":"192","endLine":116,"endColumn":46},{"ruleId":"173","severity":1,"message":"181","line":2,"column":8,"nodeType":"175","messageId":"176","endLine":2,"endColumn":17},{"ruleId":"173","severity":1,"message":"193","line":11,"column":12,"nodeType":"175","messageId":"176","endLine":11,"endColumn":16},{"ruleId":"173","severity":1,"message":"181","line":2,"column":8,"nodeType":"175","messageId":"176","endLine":2,"endColumn":17},{"ruleId":"173","severity":1,"message":"194","line":1,"column":17,"nodeType":"175","messageId":"176","endLine":1,"endColumn":23},{"ruleId":"173","severity":1,"message":"181","line":2,"column":8,"nodeType":"175","messageId":"176","endLine":2,"endColumn":17},{"ruleId":"173","severity":1,"message":"181","line":2,"column":8,"nodeType":"175","messageId":"176","endLine":2,"endColumn":17},{"ruleId":"173","severity":1,"message":"195","line":9,"column":22,"nodeType":"175","messageId":"176","endLine":9,"endColumn":33},{"ruleId":"173","severity":1,"message":"196","line":11,"column":23,"nodeType":"175","messageId":"176","endLine":11,"endColumn":35},{"ruleId":"173","severity":1,"message":"181","line":4,"column":8,"nodeType":"175","messageId":"176","endLine":4,"endColumn":17},{"ruleId":"173","severity":1,"message":"197","line":7,"column":29,"nodeType":"175","messageId":"176","endLine":7,"endColumn":37},{"ruleId":"173","severity":1,"message":"198","line":4,"column":10,"nodeType":"175","messageId":"176","endLine":4,"endColumn":15},{"ruleId":"173","severity":1,"message":"199","line":4,"column":17,"nodeType":"175","messageId":"176","endLine":4,"endColumn":23},{"ruleId":"200","severity":1,"message":"201","line":13,"column":21,"nodeType":"191","messageId":"202","endLine":13,"endColumn":40},"no-native-reassign",["203"],"no-negated-in-lhs",["204"],"no-unused-vars","'routes' is assigned a value but never used.","Identifier","unusedVar","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'PropTypes' is defined but never used.","'t' is assigned a value but never used.","'date' is assigned a value but never used.","'setState' is assigned a value but never used.","'useEffect' is defined but never used.","'Valide' is assigned a value but never used.","'setValide' is assigned a value but never used.","'p' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'page' is assigned a value but never used.","'useRef' is defined but never used.","'setPageSize' is assigned a value but never used.","'setTotalItem' is assigned a value but never used.","'useMatch' is defined but never used.","'Stack' is defined but never used.","'Button' is defined but never used.","no-self-compare","Comparing to itself is potentially pointless.","comparingToSelf","no-global-assign","no-unsafe-negation"]
{"ast":null,"code":"import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport HttpApi from 'i18next-http-backend';\ni18n.use(initReactI18next) // passes i18n down to react-i18next\n.use(LanguageDetector).use(HttpApi).init({\n  // the translations\n  // (tip move them in a JSON file and import them,\n  // or even better, manage them via a UI: https://react.i18next.com/guides/multiple-translation-files#manage-your-translations-with-a-management-gui)\n  // lng: \"en\",  if you're using a language detector, do not define the lng option\n  supportedLngs: [\"en\", \"fr\"],\n  fallbackLng: \"fr\",\n  order: ['cookie', 'localStorage', 'sessionStorage', 'navigator', 'path', 'subdomain'],\n  //lang detection\n  caches: ['cookie'],\n  backend: {\n    loadPath: '/locales/{{lng}}/{{ns}}.json'\n  },\n  react: {\n    useSuspense: false,\n    wait: true\n  },\n  ns: ['common', 'home', 'login'],\n  defaultNS: 'common',\n  nsSeparator: false,\n  keySeparator: false\n});","map":{"version":3,"sources":["D:/All - Projects/PROJECTS - Gitkraken/Project-9 - capsit/capsit/src/services/i18n.js"],"names":["i18n","initReactI18next","LanguageDetector","HttpApi","use","init","supportedLngs","fallbackLng","order","caches","backend","loadPath","react","useSuspense","wait","ns","defaultNS","nsSeparator","keySeparator"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;AACA,SAASC,gBAAT,QAAiC,eAAjC;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEAH,IAAI,CACDI,GADH,CACOH,gBADP,EACyB;AADzB,CAEGG,GAFH,CAEOF,gBAFP,EAGGE,GAHH,CAGOD,OAHP,EAKGE,IALH,CAKQ;AACJ;AACA;AACA;AAEA;AACAC,EAAAA,aAAa,EAAE,CAAC,IAAD,EAAO,IAAP,CANX;AAOJC,EAAAA,WAAW,EAAE,IAPT;AAQJC,EAAAA,KAAK,EAAE,CAAC,QAAD,EAAW,cAAX,EAA2B,gBAA3B,EAA6C,WAA7C,EAA0D,MAA1D,EAAkE,WAAlE,CARH;AAQmF;AACvFC,EAAAA,MAAM,EAAE,CAAC,QAAD,CATJ;AAUJC,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAAE;AADH,GAVL;AAaJC,EAAAA,KAAK,EAAE;AACLC,IAAAA,WAAW,EAAE,KADR;AAELC,IAAAA,IAAI,EAAE;AAFD,GAbH;AAiBJC,EAAAA,EAAE,EAAE,CAAC,QAAD,EAAW,MAAX,EAAkB,OAAlB,CAjBA;AAkBJC,EAAAA,SAAS,EAAE,QAlBP;AAmBJC,EAAAA,WAAW,EAAE,KAnBT;AAoBJC,EAAAA,YAAY,EAAE;AApBV,CALR","sourcesContent":["import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nimport LanguageDetector from 'i18next-browser-languagedetector'\r\nimport HttpApi from 'i18next-http-backend';\r\n\r\ni18n\r\n  .use(initReactI18next) // passes i18n down to react-i18next\r\n  .use(LanguageDetector)\r\n  .use(HttpApi)\r\n\r\n  .init({\r\n    // the translations\r\n    // (tip move them in a JSON file and import them,\r\n    // or even better, manage them via a UI: https://react.i18next.com/guides/multiple-translation-files#manage-your-translations-with-a-management-gui)\r\n\r\n    // lng: \"en\",  if you're using a language detector, do not define the lng option\r\n    supportedLngs: [\"en\", \"fr\"],\r\n    fallbackLng: \"fr\",\r\n    order: ['cookie', 'localStorage', 'sessionStorage', 'navigator', 'path', 'subdomain'], //lang detection\r\n    caches: ['cookie'],\r\n    backend: {\r\n      loadPath: '/locales/{{lng}}/{{ns}}.json',\r\n    },\r\n    react: {\r\n      useSuspense: false,\r\n      wait: true\r\n    },\r\n    ns: ['common', 'home','login'],\r\n    defaultNS: 'common',\r\n    nsSeparator: false,\r\n    keySeparator: false,\r\n\r\n\r\n\r\n  });"]},"metadata":{},"sourceType":"module"}
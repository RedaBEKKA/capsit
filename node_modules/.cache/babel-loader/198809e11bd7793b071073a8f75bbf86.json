{"ast":null,"code":"var _jsxFileName = \"D:\\\\All - Projects\\\\PROJECTS - Gitkraken\\\\Project-9 - capsit\\\\capsit\\\\src\\\\componenets\\\\snackbar\\\\snackbar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport Snackbar from '@mui/material/Snackbar';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport classes from \"./snackBar.module.scss\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as actions from '../../store/action-creators';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SnackbarAlert = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    message,\n    openSnackbar,\n    snakbarType\n  } = useSelector(state => state.ui);\n\n  const handleClose = () => {\n    dispatch(actions.closSnackBar());\n  };\n\n  const action = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(IconButton, {\n      size: \"small\",\n      \"aria-label\": \"close\",\n      color: \"inherit\",\n      onClick: handleClose,\n      children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n        fontSize: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false); // console.log(message, openSnackbar, snakbarType)\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Snackbar, {\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      },\n      open: openSnackbar,\n      autoHideDuration: 6000,\n      onClose: handleClose,\n      action: action,\n      ContentProps: {\n        \"aria-describedby\": \"message-id\",\n        className: classes[snakbarType]\n      },\n      message: /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"message-id\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(SnackbarAlert, \"UaK+KIhRN4+fvOkWx1cXfMln+pc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = SnackbarAlert;\n\nvar _c;\n\n$RefreshReg$(_c, \"SnackbarAlert\");","map":{"version":3,"sources":["D:/All - Projects/PROJECTS - Gitkraken/Project-9 - capsit/capsit/src/componenets/snackbar/snackbar.js"],"names":["React","useRef","PropTypes","Snackbar","IconButton","CloseIcon","classes","useDispatch","useSelector","actions","SnackbarAlert","props","dispatch","message","openSnackbar","snakbarType","state","ui","handleClose","closSnackBar","action","vertical","horizontal","className"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAO,KAAKC,OAAZ,MAAyB,6BAAzB;;;AAIA,OAAO,MAAMC,aAAa,GAAGC,KAAK,IAAI;AAAA;;AAClC,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AAEA,QAAM;AAAEM,IAAAA,OAAF;AAAWC,IAAAA,YAAX;AAAyBC,IAAAA;AAAzB,MAAyCP,WAAW,CACtDQ,KAAK,IAAIA,KAAK,CAACC,EADuC,CAA1D;;AAIA,QAAMC,WAAW,GAAG,MAAM;AACtBN,IAAAA,QAAQ,CAACH,OAAO,CAACU,YAAR,EAAD,CAAR;AACH,GAFD;;AAIA,QAAMC,MAAM,gBACR;AAAA,2BAEI,QAAC,UAAD;AACI,MAAA,IAAI,EAAC,OADT;AAEI,oBAAW,OAFf;AAGI,MAAA,KAAK,EAAC,SAHV;AAII,MAAA,OAAO,EAAEF,WAJb;AAAA,6BAMI,QAAC,SAAD;AAAW,QAAA,QAAQ,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA;AAFJ,mBADJ,CAXkC,CAwBlC;;;AACA,sBACI;AAAA,2BACI,QAAC,QAAD;AACI,MAAA,YAAY,EAAE;AAAEG,QAAAA,QAAQ,EAAE,KAAZ;AAAmBC,QAAAA,UAAU,EAAE;AAA/B,OADlB;AAEI,MAAA,IAAI,EAAER,YAFV;AAGI,MAAA,gBAAgB,EAAE,IAHtB;AAII,MAAA,OAAO,EAAEI,WAJb;AAKI,MAAA,MAAM,EAAEE,MALZ;AAMI,MAAA,YAAY,EAAE;AACV,4BAAoB,YADV;AAEVG,QAAAA,SAAS,EAAEjB,OAAO,CAACS,WAAD;AAFR,OANlB;AAUI,MAAA,OAAO,eACH;AAAM,QAAA,EAAE,EAAC,YAAT;AAAA,+BACI;AAAA,oBAAMF;AAAN;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAXR;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAqBH,CA9CM;;GAAMH,a;UACQH,W,EAE8BC,W;;;KAHtCE,a","sourcesContent":["import React, { useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport classes from \"./snackBar.module.scss\"\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as actions from '../../store/action-creators'\r\n\r\n\r\n\r\nexport const SnackbarAlert = props => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { message, openSnackbar, snakbarType } = useSelector(\r\n        state => state.ui\r\n    );\r\n\r\n    const handleClose = () => {\r\n        dispatch(actions.closSnackBar());\r\n    }\r\n\r\n    const action = (\r\n        <>\r\n\r\n            <IconButton\r\n                size=\"small\"\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                onClick={handleClose}\r\n            >\r\n                <CloseIcon fontSize=\"small\" />\r\n            </IconButton>\r\n        </>\r\n    );\r\n    // console.log(message, openSnackbar, snakbarType)\r\n    return (\r\n        <>\r\n            <Snackbar\r\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                open={openSnackbar}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose}\r\n                action={action}\r\n                ContentProps={{\r\n                    \"aria-describedby\": \"message-id\",\r\n                    className: classes[snakbarType],\r\n                }}\r\n                message={\r\n                    <span id=\"message-id\" >\r\n                        <div>{message}</div>\r\n                    </span>\r\n                }\r\n            />\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}
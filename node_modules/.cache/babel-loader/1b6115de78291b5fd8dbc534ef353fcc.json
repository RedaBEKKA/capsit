{"ast":null,"code":"import { __rest, __assign } from './_virtual/_tslib.js';\nimport * as React from 'react';\nimport MuiToggleButtonGroup from '@mui/material/ToggleButtonGroup';\nimport invariant from 'tiny-warning';\n\nfunction fieldToToggleButtonGroup(_a) {\n  var _b = _a.field;\n  _b.onChange;\n\n  var fieldOnBlur = _b.onBlur,\n      field = __rest(_b, [\"onChange\", \"onBlur\"]),\n      type = _a.type,\n      onChange = _a.onChange,\n      onBlur = _a.onBlur,\n      form = _a.form,\n      props = __rest(_a, [\"field\", \"type\", \"onChange\", \"onBlur\", \"form\"]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    invariant(type === 'checkbox', \"property type=checkbox is missing from field \" + field.name + \", this can caused unexpected behaviour\");\n\n    if (!props.exclusive) {\n      invariant(Array.isArray(field.value), \"value for \" + field.name + \" is not an array, this can caused unexpected behaviour\");\n    }\n  }\n\n  return __assign(__assign({\n    onBlur: onBlur !== null && onBlur !== void 0 ? onBlur : function () {\n      fieldOnBlur(field.name);\n    },\n    onChange: onChange !== null && onChange !== void 0 ? onChange : function (_event, newValue) {\n      form.setFieldValue(field.name, newValue);\n    }\n  }, field), props);\n}\n\nfunction ToggleButtonGroup(props) {\n  return React.createElement(MuiToggleButtonGroup, __assign({}, fieldToToggleButtonGroup(props)));\n}\n\nToggleButtonGroup.displayName = 'FormikMaterialUIToggleButtonGroup';\nexport { ToggleButtonGroup, fieldToToggleButtonGroup };","map":{"version":3,"sources":["D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\node_modules\\formik-material-ui\\src\\ToggleButtonGroup.tsx"],"names":[],"mappings":";;;;;SAagB,wB,CAAyB,E,EAOhB;MANvB,EAAA,GAAA,EAAA,CAAA,K;AAA6D,EAAA,EAAA,CAAjC,QAAiC;;AAAjC,MAAU,WAAW,GAAA,EAAA,CAAA,MAArB;AAAA,MAA0B,KAAK,GAAA,MAAA,CAAA,EAAA,EAApD,CAAA,UAAA,EAAA,QAAA,CAAoD,CAA/B;AAAA,MAC5B,IAAI,GAAA,EAAA,CAAA,IADwB;AAAA,MAE5B,QAAQ,GAAA,EAAA,CAAA,QAFoB;AAAA,MAG5B,MAAM,GAAA,EAAA,CAAA,MAHsB;AAAA,MAI5B,IAAI,GAAA,EAAA,CAAA,IAJwB;AAAA,MAKzB,KAAK,GAAA,MAAA,CAAA,EAAA,EAN+B,CAAA,OAAA,EAAA,MAAA,EAAA,UAAA,EAAA,QAAA,EAAA,MAAA,CAM/B,CALoB;;AAO5B,MAAI,OAAO,CAAC,GAAR,CAAY,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,IAAA,SAAS,CACP,IAAI,KAAK,UADF,EAEP,kDAAgD,KAAK,CAAC,IAAtD,GAA0D,wCAFnD,CAAT;;AAKA,QAAI,CAAC,KAAK,CAAC,SAAX,EAAsB;AACpB,MAAA,SAAS,CACP,KAAK,CAAC,OAAN,CAAc,KAAK,CAAC,KAApB,CADO,EAEP,eAAa,KAAK,CAAC,IAAnB,GAAuB,wDAFhB,CAAT;AAID;AACF;;AAED,SAAA,QAAA,CAAA,QAAA,CAAA;AACE,IAAA,MAAM,EACJ,MAAM,KAAA,IAAN,IAAA,MAAM,KAAA,KAAA,CAAN,GAAA,MAAA,GACA,YAAA;AACE,MAAA,WAAW,CAAC,KAAK,CAAC,IAAP,CAAX;AACD,KALL;AAME,IAAA,QAAQ,EACN,QAAQ,KAAA,IAAR,IAAA,QAAQ,KAAA,KAAA,CAAR,GAAA,QAAA,GACA,UAAU,MAAV,EAAkB,QAAlB,EAA0B;AACxB,MAAA,IAAI,CAAC,aAAL,CAAmB,KAAK,CAAC,IAAzB,EAA+B,QAA/B;AACD;AAVL,GAAA,EAWK,KAXL,CAAA,EAYK,KAZL,CAAA;AAcD;;SAEe,iB,CAAkB,K,EAA6B;AAC7D,SAAO,KAAA,CAAA,aAAA,CAAC,oBAAD,EAAqB,QAAA,CAAA,EAAA,EAAK,wBAAwB,CAAC,KAAD,CAA7B,CAArB,CAAP;AACD;;AAED,iBAAiB,CAAC,WAAlB,GAAgC,mCAAhC","sourcesContent":["import * as React from 'react';\nimport MuiToggleButtonGroup, {\n  ToggleButtonGroupProps as MuiToggleButtonGroupProps,\n} from '@mui/material/ToggleButtonGroup';\nimport { FieldProps } from 'formik';\nimport invariant from 'tiny-warning';\n\nexport interface ToggleButtonGroupProps\n  extends FieldProps,\n    Omit<MuiToggleButtonGroupProps, 'name' | 'value' | 'error'> {\n  type?: string;\n}\n\nexport function fieldToToggleButtonGroup({\n  field: { onChange: _onChange, onBlur: fieldOnBlur, ...field },\n  type,\n  onChange,\n  onBlur,\n  form,\n  ...props\n}: ToggleButtonGroupProps): MuiToggleButtonGroupProps {\n  if (process.env.NODE_ENV !== 'production') {\n    invariant(\n      type === 'checkbox',\n      `property type=checkbox is missing from field ${field.name}, this can caused unexpected behaviour`\n    );\n\n    if (!props.exclusive) {\n      invariant(\n        Array.isArray(field.value),\n        `value for ${field.name} is not an array, this can caused unexpected behaviour`\n      );\n    }\n  }\n\n  return {\n    onBlur:\n      onBlur ??\n      function () {\n        fieldOnBlur(field.name);\n      },\n    onChange:\n      onChange ??\n      function (_event, newValue) {\n        form.setFieldValue(field.name, newValue);\n      },\n    ...field,\n    ...props,\n  };\n}\n\nexport function ToggleButtonGroup(props: ToggleButtonGroupProps) {\n  return <MuiToggleButtonGroup {...fieldToToggleButtonGroup(props)} />;\n}\n\nToggleButtonGroup.displayName = 'FormikMaterialUIToggleButtonGroup';\n"]},"metadata":{},"sourceType":"module"}
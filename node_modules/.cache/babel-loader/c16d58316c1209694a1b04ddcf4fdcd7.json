{"ast":null,"code":"import * as actionType from '../action-creators/action-types';\nimport { updateObject } from '../../services/utility';\nconst initialState = {\n  openSnackbar: false,\n  message: '',\n  snakbarType: ''\n};\nexport const openSnackBar = (state, action) => {\n  return updateObject(state, {\n    message: action.message,\n    openSnackbar: true,\n    snakbarType: action.snakbarType\n  });\n};\nexport const closSnackBar = (state, action) => {\n  return updateObject(state, {\n    openSnackbar: false,\n    message: '',\n    snakbarType: ''\n  });\n};\n\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionType.SNACKBAR_SUCCESS:\n      return openSnackBar(state, action);\n\n    case actionType.SNACKBAR_CLEAR:\n      return closSnackBar(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:/All - Projects/PROJECTS - Gitkraken/Project-9 - capsit/capsit/src/store/reducers/snackbar.js"],"names":["actionType","updateObject","initialState","openSnackbar","message","snakbarType","openSnackBar","state","action","closSnackBar","reducer","type","SNACKBAR_SUCCESS","SNACKBAR_CLEAR"],"mappings":"AAAA,OAAO,KAAKA,UAAZ,MAA4B,iCAA5B;AACA,SAASC,YAAT,QAA6B,wBAA7B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,YAAY,EAAE,KADG;AAEjBC,EAAAA,OAAO,EAAE,EAFQ;AAGjBC,EAAAA,WAAW,EAAE;AAHI,CAArB;AAOA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC3C,SAAOP,YAAY,CAACM,KAAD,EAAQ;AAAEH,IAAAA,OAAO,EAAEI,MAAM,CAACJ,OAAlB;AAA2BD,IAAAA,YAAY,EAAE,IAAzC;AAA+CE,IAAAA,WAAW,EAAEG,MAAM,CAACH;AAAnE,GAAR,CAAnB;AACH,CAFM;AAIP,OAAO,MAAMI,YAAY,GAAG,CAACF,KAAD,EAAQC,MAAR,KAAmB;AAC3C,SAAOP,YAAY,CAACM,KAAD,EAAQ;AACvBJ,IAAAA,YAAY,EAAE,KADS;AAEvBC,IAAAA,OAAO,EAAE,EAFc;AAGvBC,IAAAA,WAAW,EAAE;AAHU,GAAR,CAAnB;AAKH,CANM;;AAQP,MAAMK,OAAO,GAAG,YAAkC;AAAA,MAAjCH,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AAC9C,UAAQA,MAAM,CAACG,IAAf;AACI,SAAKX,UAAU,CAACY,gBAAhB;AAAkC,aAAON,YAAY,CAACC,KAAD,EAAQC,MAAR,CAAnB;;AAClC,SAAKR,UAAU,CAACa,cAAhB;AAAgC,aAAOJ,YAAY,CAACF,KAAD,EAAQC,MAAR,CAAnB;;AAEhC;AACI,aAAOD,KAAP;AALR;AAOH,CARD;;AAUA,eAAeG,OAAf","sourcesContent":["import * as actionType from '../action-creators/action-types';\r\nimport { updateObject } from '../../services/utility';\r\n\r\nconst initialState = {\r\n    openSnackbar: false,\r\n    message: '',\r\n    snakbarType: ''\r\n\r\n};\r\n\r\nexport const openSnackBar = (state, action) => {\r\n    return updateObject(state, { message: action.message, openSnackbar: true, snakbarType: action.snakbarType })\r\n};\r\n\r\nexport const closSnackBar = (state, action) => {\r\n    return updateObject(state, {\r\n        openSnackbar: false,\r\n        message: '',\r\n        snakbarType: ''\r\n    })\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionType.SNACKBAR_SUCCESS: return openSnackBar(state, action);\r\n        case actionType.SNACKBAR_CLEAR: return closSnackBar(state, action);\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}
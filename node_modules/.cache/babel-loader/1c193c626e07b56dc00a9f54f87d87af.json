{"ast":null,"code":"var _jsxFileName = \"D:\\\\All - Projects\\\\PROJECTS - Gitkraken\\\\Project-9 - capsit\\\\capsit\\\\src\\\\pages\\\\auth\\\\forgotPassword\\\\ForgotPassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button } from \"@mui/material\";\nimport { useNavigate } from 'react-router-dom';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport logo from \"../../../assets/logo.png\";\nimport classes from './forgotPassword.module.scss';\nimport * as actions from '../../../store/action-creators/index';\nimport { useDispatch } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\nimport { Formik, Form, Field } from \"formik\";\nimport { TextField } from \"formik-material-ui\";\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ForgotPassword = () => {\n  _s();\n\n  const {\n    t\n  } = useTranslation(['login']);\n  const navigate = useNavigate();\n\n  const handleClick = () => {\n    navigate('/');\n  }; //Data\n\n\n  const initialValues = {\n    email: \"\"\n  };\n  const [state, setState] = useState(initialValues); //validation schema\n\n  let validationSchema = Yup.object().shape({\n    email: Yup.string().email(\"Invalid email\").required(\"Email is required\")\n  });\n  let dispatch = useDispatch();\n\n  const onSubmit = values => {\n    console.log(values, 'values');\n    dispatch(actions.forgotPassword(values));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.forgotPass_login,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.forgotPass_container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: classes.forgotPass_logo,\n          src: logo,\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.forgotPass_form,\n        children: [/*#__PURE__*/_jsxDEV(ArrowBackIcon, {\n          className: classes.forgotPass_icon,\n          onClick: () => handleClick()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.forgotPass_title,\n          children: t('titleForgotPassword')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.forgotPass_email_title,\n          children: t('textForgotPassword')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.forgotPass_reset_password,\n          children: t('textForgotPasswordDetails')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: state,\n          validationSchema: validationSchema,\n          onSubmit: values => onSubmit(values),\n          children: _ref => {\n            let {\n              values\n            } = _ref;\n            return /*#__PURE__*/_jsxDEV(Form, {\n              autoComplete: \"on\",\n              style: {\n                margin: 40\n              },\n              children: [/*#__PURE__*/_jsxDEV(Field, {\n                className: classes.textField,\n                variant: \"standard\",\n                id: \"email\",\n                label: t('mailAddress'),\n                name: \"email\",\n                value: values.email,\n                type: \"email\",\n                component: TextField\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: classes.forgotPass_button,\n                variant: \"outlined\",\n                type: \"submit\",\n                children: t('submit')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 11\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ForgotPassword, \"0IrjrmWgOJqWzye6PkQG2I8AUDY=\", false, function () {\n  return [useTranslation, useNavigate, useDispatch];\n});\n\n_c = ForgotPassword;\nexport default ForgotPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"sources":["D:/All - Projects/PROJECTS - Gitkraken/Project-9 - capsit/capsit/src/pages/auth/forgotPassword/ForgotPassword.js"],"names":["React","useState","Button","useNavigate","ArrowBackIcon","logo","classes","actions","useDispatch","useTranslation","Formik","Form","Field","TextField","Yup","ForgotPassword","t","navigate","handleClick","initialValues","email","state","setState","validationSchema","object","shape","string","required","dispatch","onSubmit","values","console","log","forgotPassword","forgotPass_login","forgotPass_container","forgotPass_logo","forgotPass_form","forgotPass_icon","forgotPass_title","forgotPass_email_title","forgotPass_reset_password","margin","textField","forgotPass_button"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAsB,eAAtB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AAEA,OAAOC,IAAP,MAAiB,0BAAjB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AAEA,OAAO,KAAKC,OAAZ,MAAyB,sCAAzB;AACA,SAAUC,WAAV,QAA6B,aAA7B;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,MAAT,EAAgBC,IAAhB,EAAsBC,KAAtB,QAAkC,QAAlC;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAE3B,QAAM;AAAEC,IAAAA;AAAF,MAAQP,cAAc,CAAC,CAAC,OAAD,CAAD,CAA5B;AACA,QAAMQ,QAAQ,GAAEd,WAAW,EAA3B;;AACA,QAAMe,WAAW,GAAG,MAAM;AACxBD,IAAAA,QAAQ,CAAC,GAAD,CAAR;AAED,GAHD,CAJ2B,CAQzB;;;AACA,QAAME,aAAa,GAAG;AACpBC,IAAAA,KAAK,EAAE;AADa,GAAtB;AAIA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAACkB,aAAD,CAAlC,CAbyB,CAexB;;AACD,MAAII,gBAAgB,GAAGT,GAAG,CAACU,MAAJ,GAAaC,KAAb,CAAmB;AACxCL,IAAAA,KAAK,EAAEN,GAAG,CAACY,MAAJ,GAAaN,KAAb,CAAmB,eAAnB,EAAoCO,QAApC,CAA6C,mBAA7C;AADiC,GAAnB,CAAvB;AAKF,MAAIC,QAAQ,GAACpB,WAAW,EAAxB;;AACA,QAAMqB,QAAQ,GAAGC,MAAD,IAAY;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EAAmB,QAAnB;AACAF,IAAAA,QAAQ,CAACrB,OAAO,CAAC0B,cAAR,CAAuBH,MAAvB,CAAD,CAAR;AACD,GAHD;;AAKE,sBACI;AACE,IAAA,SAAS,EAAGxB,OAAO,CAAC4B,gBADtB;AAAA,2BAGA;AACE,MAAA,SAAS,EAAE5B,OAAO,CAAC6B,oBADrB;AAAA,8BAGA;AAAK,QAAA,SAAS,EAAC,EAAf;AAAA,+BACE;AACE,UAAA,SAAS,EAAE7B,OAAO,CAAC8B,eADrB;AAEE,UAAA,GAAG,EAAE/B,IAFP;AAGE,UAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAHA,eAUA;AACE,QAAA,SAAS,EAAEC,OAAO,CAAC+B,eADrB;AAAA,gCAGA,QAAC,aAAD;AACA,UAAA,SAAS,EAAE/B,OAAO,CAACgC,eADnB;AAEA,UAAA,OAAO,EAAE,MAAMpB,WAAW;AAF1B;AAAA;AAAA;AAAA;AAAA,gBAHA,eAME;AACE,UAAA,SAAS,EAAEZ,OAAO,CAACiC,gBADrB;AAAA,oBAGGvB,CAAC,CAAC,qBAAD;AAHJ;AAAA;AAAA;AAAA;AAAA,gBANF,eAYE;AAAM,UAAA,SAAS,EAAEV,OAAO,CAACkC,sBAAzB;AAAA,oBACCxB,CAAC,CAAC,oBAAD;AADF;AAAA;AAAA;AAAA;AAAA,gBAZF,eAeE;AACA,UAAA,SAAS,EAAEV,OAAO,CAACmC,yBADnB;AAAA,oBAGCzB,CAAC,CAAC,2BAAD;AAHF;AAAA;AAAA;AAAA;AAAA,gBAfF,eAoBE,QAAC,MAAD;AACE,UAAA,aAAa,EAAEK,KADjB;AAEE,UAAA,gBAAgB,EAAEE,gBAFpB;AAGE,UAAA,QAAQ,EAAGO,MAAD,IAAWD,QAAQ,CAACC,MAAD,CAH/B;AAAA,oBAKC,QAAe;AAAA,gBAAd;AAAEA,cAAAA;AAAF,aAAc;AAEhB,gCACA,QAAC,IAAD;AAAM,cAAA,YAAY,EAAC,IAAnB;AAAwB,cAAA,KAAK,EAAE;AAACY,gBAAAA,MAAM,EAAC;AAAR,eAA/B;AAAA,sCACE,QAAC,KAAD;AACC,gBAAA,SAAS,EAAEpC,OAAO,CAACqC,SADpB;AAEE,gBAAA,OAAO,EAAC,UAFV;AAGE,gBAAA,EAAE,EAAC,OAHL;AAIE,gBAAA,KAAK,EAAE3B,CAAC,CAAC,aAAD,CAJV;AAKE,gBAAA,IAAI,EAAC,OALP;AAME,gBAAA,KAAK,EAAEc,MAAM,CAACV,KANhB;AAOE,gBAAA,IAAI,EAAC,OAPP;AAQE,gBAAA,SAAS,EAAEP;AARb;AAAA;AAAA;AAAA;AAAA,sBADF,eAWE;AAAA;AAAA;AAAA;AAAA,sBAXF,eAYE,QAAC,MAAD;AACE,gBAAA,SAAS,EAAEP,OAAO,CAACsC,iBADrB;AAEE,gBAAA,OAAO,EAAC,UAFV;AAGE,gBAAA,IAAI,EAAC,QAHP;AAAA,0BAKG5B,CAAC,CAAC,QAAD;AALJ;AAAA;AAAA;AAAA;AAAA,sBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA;AAuBC;AA9BD;AAAA;AAAA;AAAA;AAAA,gBApBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwEH,CAnGD;;GAAMD,c;UAEUN,c,EACEN,W,EAkBHK,W;;;KArBTO,c;AAqGN,eAAeA,cAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button} from \"@mui/material\";\r\nimport { useNavigate } from 'react-router-dom'\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\n\r\nimport logo from \"../../../assets/logo.png\";\r\nimport classes from './forgotPassword.module.scss'\r\n\r\nimport * as actions from '../../../store/action-creators/index';\r\nimport {  useDispatch } from \"react-redux\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Formik,Form, Field} from \"formik\";\r\nimport { TextField } from \"formik-material-ui\"\r\nimport * as Yup from \"yup\"\r\n\r\nconst ForgotPassword = () => {\r\n    \r\n  const { t } = useTranslation(['login'])\r\n  const navigate =useNavigate()\r\n  const handleClick = () => {\r\n    navigate('/');\r\n \r\n  }\r\n    //Data\r\n    const initialValues = {\r\n      email: \"\",\r\n    }\r\n  \r\n    const [state, setState] = useState(initialValues);\r\n  \r\n     //validation schema\r\n    let validationSchema = Yup.object().shape({\r\n      email: Yup.string().email(\"Invalid email\").required(\"Email is required\")\r\n      \r\n    })\r\n\r\n  let dispatch=useDispatch()\r\n  const onSubmit= (values) => {\r\n    console.log(values,'values')\r\n    dispatch(actions.forgotPassword(values))\r\n  }\r\n\r\n    return (\r\n        <div\r\n          className= {classes.forgotPass_login}\r\n        >\r\n        <div\r\n          className={classes.forgotPass_container}\r\n        >\r\n        <div className=\"\">\r\n          <img\r\n            className={classes.forgotPass_logo}\r\n            src={logo}\r\n            alt=\"logo\"\r\n          />\r\n        </div>\r\n        <div\r\n          className={classes.forgotPass_form}\r\n        >\r\n        <ArrowBackIcon \r\n        className={classes.forgotPass_icon}\r\n        onClick={() => handleClick()}  />\r\n          <div\r\n            className={classes.forgotPass_title}\r\n          >\r\n            {t('titleForgotPassword')}\r\n          </div>\r\n\r\n          <div  className={classes.forgotPass_email_title} >\r\n          {t('textForgotPassword')}\r\n          </div>\r\n          <div\r\n          className={classes.forgotPass_reset_password}\r\n          > \r\n          {t('textForgotPasswordDetails')}\r\n          </div>\r\n          <Formik \r\n            initialValues={state}\r\n            validationSchema={validationSchema}\r\n            onSubmit={(values) =>onSubmit(values)}\r\n          >\r\n          {({ values}) => {\r\n            \r\n          return (\r\n          <Form autoComplete=\"on\" style={{margin:40}}>\r\n            <Field\r\n             className={classes.textField}\r\n              variant=\"standard\"\r\n              id=\"email\"\r\n              label={t('mailAddress')}\r\n              name=\"email\"\r\n              value={values.email}\r\n              type=\"email\"\r\n              component={TextField}\r\n            />\r\n            <br/>\r\n            <Button\r\n              className={classes.forgotPass_button}\r\n              variant=\"outlined\"\r\n              type=\"submit\"\r\n            >\r\n              {t('submit')}\r\n            </Button>\r\n            \r\n          </Form>\r\n          )\r\n          }}\r\n          </Formik>\r\n        </div>\r\n       \r\n      </div>\r\n     \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ForgotPassword\r\n"]},"metadata":{},"sourceType":"module"}
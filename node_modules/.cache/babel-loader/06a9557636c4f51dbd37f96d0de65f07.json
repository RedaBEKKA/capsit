{"ast":null,"code":"var _jsxFileName = \"D:\\\\All - Projects\\\\PROJECTS - Gitkraken\\\\Project-9 - capsit\\\\capsit\\\\src\\\\componenets\\\\table\\\\celleType\\\\actions.js\",\n    _s = $RefreshSig$();\n\n// actions\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Stack, Button, IconButton, Menu, MenuItem } from '@mui/material';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TableActions = _ref => {\n  _s();\n\n  let {\n    actions,\n    rowData\n  } = _ref;\n  actions = actions.filter(action => action.type !== 'more');\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"more\",\n      id: \"long-button\",\n      \"aria-controls\": open ? 'long-menu' : undefined,\n      \"aria-expanded\": open ? 'true' : undefined,\n      \"aria-haspopup\": \"true\",\n      onClick: handleClick,\n      children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      id: \"long-menu\",\n      MenuListProps: {\n        'aria-labelledby': 'long-button'\n      },\n      anchorEl: anchorEl,\n      open: open,\n      onClose: handleClose,\n      PaperProps: {\n        style: {\n          width: '20ch'\n        }\n      },\n      children: actions.map((act, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: () => {\n          act.onClicked(rowData);\n          handleClose();\n        },\n        children: act.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TableActions, \"+aMDa7FPcESUyQDF1vq0RSMn4/k=\");\n\n_c = TableActions;\nTableActions.propTypes = {\n  actions: PropTypes.array.isRequired,\n  rowData: PropTypes.any.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"TableActions\");","map":{"version":3,"sources":["D:/All - Projects/PROJECTS - Gitkraken/Project-9 - capsit/capsit/src/componenets/table/celleType/actions.js"],"names":["React","PropTypes","Stack","Button","IconButton","Menu","MenuItem","MoreVertIcon","TableActions","actions","rowData","filter","action","type","anchorEl","setAnchorEl","useState","open","Boolean","handleClick","event","currentTarget","handleClose","undefined","style","width","map","act","index","onClicked","name","propTypes","array","isRequired","any"],"mappings":";;;AAAA;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,UAAxB,EAAoCC,IAApC,EAA0CC,QAA1C,QAA2D,eAA3D;AACA,OAAOC,YAAP,MAAyB,8BAAzB;;AACA,OAAO,MAAMC,YAAY,GAAG,QAA0B;AAAA;;AAAA,MAAzB;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAyB;AAClDD,EAAAA,OAAO,GAAGA,OAAO,CAACE,MAAR,CAAeC,MAAM,IAAIA,MAAM,CAACC,IAAP,KAAgB,MAAzC,CAAV;AAEA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bf,KAAK,CAACgB,QAAN,CAAe,IAAf,CAAhC;AACA,QAAMC,IAAI,GAAGC,OAAO,CAACJ,QAAD,CAApB;;AACA,QAAMK,WAAW,GAAIC,KAAD,IAAW;AAC3BL,IAAAA,WAAW,CAACK,KAAK,CAACC,aAAP,CAAX;AACH,GAFD;;AAGA,QAAMC,WAAW,GAAG,MAAM;AACtBP,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH,GAFD;;AAGA,sBACI;AAAA,4BACI,QAAC,UAAD;AACI,oBAAW,MADf;AAEI,MAAA,EAAE,EAAC,aAFP;AAGI,uBAAeE,IAAI,GAAG,WAAH,GAAiBM,SAHxC;AAII,uBAAeN,IAAI,GAAG,MAAH,GAAYM,SAJnC;AAKI,uBAAc,MALlB;AAMI,MAAA,OAAO,EAAEJ,WANb;AAAA,6BAQI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAWI,QAAC,IAAD;AACI,MAAA,EAAE,EAAC,WADP;AAEI,MAAA,aAAa,EAAE;AACX,2BAAmB;AADR,OAFnB;AAKI,MAAA,QAAQ,EAAEL,QALd;AAMI,MAAA,IAAI,EAAEG,IANV;AAOI,MAAA,OAAO,EAAEK,WAPb;AAQI,MAAA,UAAU,EAAE;AACRE,QAAAA,KAAK,EAAE;AACHC,UAAAA,KAAK,EAAE;AADJ;AADC,OARhB;AAAA,gBAcKhB,OAAO,CAACiB,GAAR,CAAY,CAACC,GAAD,EAAMC,KAAN,kBACT,QAAC,QAAD;AAAsB,QAAA,OAAO,EAAE,MAAM;AAAED,UAAAA,GAAG,CAACE,SAAJ,CAAcnB,OAAd;AAAwBY,UAAAA,WAAW;AAAK,SAA/E;AAAA,kBACKK,GAAG,CAACG;AADT,SAAeF,KAAf;AAAA;AAAA;AAAA;AAAA,cADH;AAdL;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkCH,CA7CM;;GAAMpB,Y;;KAAAA,Y;AA8CbA,YAAY,CAACuB,SAAb,GAAyB;AACrBtB,EAAAA,OAAO,EAAER,SAAS,CAAC+B,KAAV,CAAgBC,UADJ;AAErBvB,EAAAA,OAAO,EAAET,SAAS,CAACiC,GAAV,CAAcD;AAFF,CAAzB","sourcesContent":["// actions\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Stack, Button, IconButton, Menu, MenuItem, } from '@mui/material';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nexport const TableActions = ({ actions, rowData }) => {\r\n    actions = actions.filter(action => action.type !== 'more')\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    return (\r\n        <div>\r\n            <IconButton\r\n                aria-label=\"more\"\r\n                id=\"long-button\"\r\n                aria-controls={open ? 'long-menu' : undefined}\r\n                aria-expanded={open ? 'true' : undefined}\r\n                aria-haspopup=\"true\"\r\n                onClick={handleClick}\r\n            >\r\n                <MoreVertIcon />\r\n            </IconButton>\r\n            <Menu\r\n                id=\"long-menu\"\r\n                MenuListProps={{\r\n                    'aria-labelledby': 'long-button',\r\n                }}\r\n                anchorEl={anchorEl}\r\n                open={open}\r\n                onClose={handleClose}\r\n                PaperProps={{\r\n                    style: {\r\n                        width: '20ch',\r\n                    },\r\n                }}\r\n            >\r\n                {actions.map((act, index) => (\r\n                    <MenuItem key={index} onClick={() => { act.onClicked(rowData); handleClose(); }}>\r\n                        {act.name}\r\n                    </MenuItem>\r\n                ))}\r\n            </Menu>\r\n        </div>\r\n    );\r\n};\r\nTableActions.propTypes = {\r\n    actions: PropTypes.array.isRequired,\r\n    rowData: PropTypes.any.isRequired,\r\n\r\n};"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\All - Projects\\\\PROJECTS - Gitkraken\\\\Project-9 - capsit\\\\capsit\\\\src\\\\services\\\\interceptor.js\";\nimport React from 'react';\nimport { SnackbarAlert } from '../componenets/snackbar/snackbar';\nimport { useDispatch } from 'react-redux';\nimport * as action from '../store/action-creators';\nimport axios from 'axios';\nimport { useTranslation } from \"react-i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst withErrorHandler = WrappedComponent => {\n  var _s = $RefreshSig$();\n\n  return _s(props => {\n    _s();\n\n    const {\n      t\n    } = useTranslation(['common', 'home', 'login']);\n    const dispatch = useDispatch();\n    axios.interceptors.request.use(function (config) {\n      // Do something before request is sent\n      return config;\n    }, function (error) {\n      // Do something with request error\n      return Promise.reject(error);\n    });\n    axios.interceptors.response.use(function (response) {\n      // Any status code that lie within the range of 2xx cause this function to trigger\n      // Do something with response data\n      return response;\n    }, function (error) {\n      if (error.response) {\n        const {\n          status\n        } = error.response;\n\n        switch (status) {\n          case 400:\n            {\n              dispatch(action.openSnackBar('succes message', 'error'));\n            }\n            break;\n\n          case 401:\n            dispatch(action.openSnackBar('errorMessage401', 'error'));\n            break;\n\n          case 403:\n            dispatch(action.openSnackBar('errorMessage403', 'error'));\n            break;\n\n          case 404:\n            dispatch(action.openSnackBar(t('errorMessage404'), 'error'));\n            break;\n\n          case 500:\n            dispatch(action.openSnackBar('errorMessage500', 'error'));\n            break;\n\n          case 502:\n            dispatch(action.openSnackBar('errorMessage502', 'error'));\n            break;\n\n          case 504:\n            dispatch(action.openSnackBar('errorMessage504', 'error'));\n            break;\n\n          default:\n            break;\n        }\n      } // Any status codes that falls outside the range of 2xx cause this function to trigger\n      // Do something with response error\n\n\n      return Promise.reject(error);\n    });\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(SnackbarAlert, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(WrappedComponent, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }, \"kRPr/hYd52YWlSb9olvMJ8xOO+s=\", false, function () {\n    return [useTranslation, useDispatch];\n  });\n};\n\nexport default withErrorHandler;","map":{"version":3,"sources":["D:/All - Projects/PROJECTS - Gitkraken/Project-9 - capsit/capsit/src/services/interceptor.js"],"names":["React","SnackbarAlert","useDispatch","action","axios","useTranslation","withErrorHandler","WrappedComponent","props","t","dispatch","interceptors","request","use","config","error","Promise","reject","response","status","openSnackBar"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,kCAA9B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAO,KAAKC,MAAZ,MAAwB,0BAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,eAA/B;;;;AAGA,MAAMC,gBAAgB,GAAIC,gBAAD,IAAsB;AAAA;;AAC3C,YAAQC,KAAD,IAAW;AAAA;;AACd,UAAM;AAAEC,MAAAA;AAAF,QAAQJ,cAAc,CAAC,CAAC,QAAD,EAAW,MAAX,EAAkB,OAAlB,CAAD,CAA5B;AACA,UAAMK,QAAQ,GAAGR,WAAW,EAA5B;AACAE,IAAAA,KAAK,CAACO,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+B,UAAUC,MAAV,EAAkB;AAC7C;AACA,aAAOA,MAAP;AACH,KAHD,EAGG,UAAUC,KAAV,EAAiB;AAChB;AACA,aAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,KAND;AAOAX,IAAAA,KAAK,CAACO,YAAN,CAAmBO,QAAnB,CAA4BL,GAA5B,CAAgC,UAAUK,QAAV,EAAoB;AAChD;AACA;AACA,aAAOA,QAAP;AACH,KAJD,EAIG,UAAUH,KAAV,EAAiB;AAChB,UAAIA,KAAK,CAACG,QAAV,EAAoB;AAChB,cAAM;AAAEC,UAAAA;AAAF,YAAaJ,KAAK,CAACG,QAAzB;;AACA,gBAAQC,MAAR;AACI,eAAK,GAAL;AAAU;AACNT,cAAAA,QAAQ,CAACP,MAAM,CAACiB,YAAP,CAAoB,gBAApB,EAAsC,OAAtC,CAAD,CAAR;AACH;AACG;;AACJ,eAAK,GAAL;AACIV,YAAAA,QAAQ,CAACP,MAAM,CAACiB,YAAP,CAAoB,iBAApB,EAAuC,OAAvC,CAAD,CAAR;AACA;;AACJ,eAAK,GAAL;AACIV,YAAAA,QAAQ,CAACP,MAAM,CAACiB,YAAP,CAAoB,iBAApB,EAAuC,OAAvC,CAAD,CAAR;AACA;;AACJ,eAAK,GAAL;AACIV,YAAAA,QAAQ,CAACP,MAAM,CAACiB,YAAP,CAAoBX,CAAC,CAAC,iBAAD,CAArB,EAA0C,OAA1C,CAAD,CAAR;AACA;;AACJ,eAAK,GAAL;AACIC,YAAAA,QAAQ,CAACP,MAAM,CAACiB,YAAP,CAAoB,iBAApB,EAAuC,OAAvC,CAAD,CAAR;AACA;;AACJ,eAAK,GAAL;AACIV,YAAAA,QAAQ,CAACP,MAAM,CAACiB,YAAP,CAAoB,iBAApB,EAAuC,OAAvC,CAAD,CAAR;AACA;;AACJ,eAAK,GAAL;AACIV,YAAAA,QAAQ,CAACP,MAAM,CAACiB,YAAP,CAAoB,iBAApB,EAAuC,OAAvC,CAAD,CAAR;AACA;;AACJ;AACI;AAxBR;AA6BH,OAhCe,CAiChB;AACA;;;AACA,aAAOJ,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,KAxCD;AA4CA,wBACI;AAAA,8BACI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,gBAAD,OAAsBP;AAAtB;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA,oBADJ;AAOH,GA7DD;AAAA,YACkBH,cADlB,EAEqBH,WAFrB;AAAA;AA8DH,CA/DD;;AAiEA,eAAeI,gBAAf","sourcesContent":["import React from 'react';\r\nimport { SnackbarAlert } from '../componenets/snackbar/snackbar'\r\nimport { useDispatch } from 'react-redux'\r\nimport * as action from '../store/action-creators'\r\nimport axios from 'axios'\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n\r\nconst withErrorHandler = (WrappedComponent) => {\r\n    return (props) => {\r\n        const { t } = useTranslation(['common', 'home','login'])\r\n        const dispatch = useDispatch()\r\n        axios.interceptors.request.use(function (config) {\r\n            // Do something before request is sent\r\n            return config;\r\n        }, function (error) {\r\n            // Do something with request error\r\n            return Promise.reject(error);\r\n        });\r\n        axios.interceptors.response.use(function (response) {\r\n            // Any status code that lie within the range of 2xx cause this function to trigger\r\n            // Do something with response data\r\n            return response;\r\n        }, function (error) {\r\n            if (error.response) {\r\n                const { status } = error.response\r\n                switch (status) {\r\n                    case 400: {\r\n                        dispatch(action.openSnackBar('succes message', 'error'));\r\n                    }\r\n                        break;\r\n                    case 401:\r\n                        dispatch(action.openSnackBar('errorMessage401', 'error'));\r\n                        break;\r\n                    case 403:\r\n                        dispatch(action.openSnackBar('errorMessage403', 'error'));\r\n                        break;\r\n                    case 404:\r\n                        dispatch(action.openSnackBar(t('errorMessage404'), 'error'));\r\n                        break;\r\n                    case 500:\r\n                        dispatch(action.openSnackBar('errorMessage500', 'error'));\r\n                        break;\r\n                    case 502:\r\n                        dispatch(action.openSnackBar('errorMessage502', 'error'));\r\n                        break;\r\n                    case 504:\r\n                        dispatch(action.openSnackBar('errorMessage504', 'error'));\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n\r\n\r\n\r\n            }\r\n            // Any status codes that falls outside the range of 2xx cause this function to trigger\r\n            // Do something with response error\r\n            return Promise.reject(error);\r\n        });\r\n\r\n\r\n\r\n        return (\r\n            <>\r\n                <SnackbarAlert />\r\n                <WrappedComponent {...props} />\r\n            </>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default withErrorHandler;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}
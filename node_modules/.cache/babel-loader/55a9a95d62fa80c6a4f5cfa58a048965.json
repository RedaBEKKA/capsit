{"ast":null,"code":"import { __rest, __assign, __awaiter, __generator } from './_virtual/_tslib.js';\nimport FormControl from '@mui/material/FormControl';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport InputLabel from '@mui/material/InputLabel';\nimport MuiSelect from '@mui/material/Select';\nimport { getIn } from 'formik';\nimport * as React from 'react';\n\nfunction fieldToSelect(_a) {\n  var _this = this;\n\n  var disabled = _a.disabled,\n      _b = _a.field;\n  _b.onBlur;\n\n  var fieldOnChange = _b.onChange,\n      field = __rest(_b, [\"onBlur\", \"onChange\"]),\n      _c = _a.form,\n      isSubmitting = _c.isSubmitting,\n      touched = _c.touched,\n      errors = _c.errors,\n      setFieldTouched = _c.setFieldTouched,\n      setFieldValue = _c.setFieldValue,\n      onClose = _a.onClose,\n      props = __rest(_a, [\"disabled\", \"field\", \"form\", \"onClose\"]);\n\n  var fieldError = getIn(errors, field.name);\n  var showError = getIn(touched, field.name) && !!fieldError;\n  return __assign(__assign({\n    disabled: disabled !== null && disabled !== void 0 ? disabled : isSubmitting,\n    error: showError,\n    formError: showError ? fieldError : undefined,\n    onBlur: function () {},\n    onChange: fieldOnChange !== null && fieldOnChange !== void 0 ? fieldOnChange : function () {},\n    onClose: onClose !== null && onClose !== void 0 ? onClose : function (e) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var dataset;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              dataset = e.target.dataset;\n              if (!(dataset && dataset.value)) return [3, 2];\n              return [4, setFieldValue(field.name, dataset.value, false)];\n\n            case 1:\n              _a.sent();\n\n              _a.label = 2;\n\n            case 2:\n              setFieldTouched(field.name, true, true);\n              return [2];\n          }\n        });\n      });\n    }\n  }, field), props);\n}\n\nfunction Select(_a) {\n  var formControl = _a.formControl,\n      inputLabel = _a.inputLabel,\n      formHelperText = _a.formHelperText,\n      selectProps = __rest(_a, [\"formControl\", \"inputLabel\", \"formHelperText\"]);\n\n  var _b = fieldToSelect(selectProps),\n      error = _b.error,\n      formError = _b.formError,\n      disabled = _b.disabled,\n      selectFieldProps = __rest(_b, [\"error\", \"formError\", \"disabled\"]);\n\n  var _c = formHelperText || {},\n      formHelperTextChildren = _c.children,\n      formHelperTextProps = __rest(_c, [\"children\"]);\n\n  var shouldDisplayFormHelperText = error || formHelperTextChildren;\n  return React.createElement(FormControl, __assign({\n    disabled: disabled,\n    error: error\n  }, formControl), React.createElement(InputLabel, __assign({\n    id: selectFieldProps.labelId\n  }, inputLabel), selectFieldProps.label), React.createElement(MuiSelect, __assign({}, selectFieldProps)), shouldDisplayFormHelperText && React.createElement(FormHelperText, __assign({}, formHelperTextProps), error ? formError : formHelperTextChildren));\n}\n\nSelect.displayName = 'FormikMaterialUISelect';\nexport { Select, fieldToSelect };","map":{"version":3,"sources":["D:\\All - Projects\\PROJECTS - Gitkraken\\Project-9 - capsit\\capsit\\node_modules\\formik-material-ui\\src\\Select.tsx"],"names":[],"mappings":"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","sourcesContent":["import FormControl, { FormControlProps } from '@mui/material/FormControl';\nimport FormHelperText, {\n  FormHelperTextProps,\n} from '@mui/material/FormHelperText';\nimport InputLabel, { InputLabelProps } from '@mui/material/InputLabel';\nimport MuiSelect, { SelectProps as MuiSelectProps } from '@mui/material/Select';\nimport { FieldProps, getIn } from 'formik';\nimport * as React from 'react';\n\nexport interface SelectProps\n  extends FieldProps,\n    Omit<MuiSelectProps, 'name' | 'value'> {\n  formControl?: FormControlProps;\n  formHelperText?: FormHelperTextProps;\n  inputLabel?: InputLabelProps;\n}\n\nexport function fieldToSelect({\n  disabled,\n  field: { onBlur: _onBlur, onChange: fieldOnChange, ...field },\n  form: { isSubmitting, touched, errors, setFieldTouched, setFieldValue },\n  onClose,\n  ...props\n}: Omit<\n  SelectProps,\n  'formControl' | 'formHelperText' | 'inputLabel'\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n>): MuiSelectProps & { formError: any } {\n  const fieldError = getIn(errors, field.name);\n  const showError = getIn(touched, field.name) && !!fieldError;\n\n  return {\n    disabled: disabled ?? isSubmitting,\n    error: showError,\n    formError: showError ? fieldError : undefined,\n    onBlur: () => {\n      // no-op\n    },\n    onChange:\n      fieldOnChange ??\n      (() => {\n        // no-op\n      }),\n    // we must use `onClose` instead of `onChange` to be able to trigger validation when users click outside of the select list.\n    onClose:\n      onClose ??\n      (async (e: React.SyntheticEvent) => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const dataset = (e.target as any).dataset as DOMStringMap;\n        if (dataset && dataset.value) {\n          // out-of-sync issue since November 2019: https://github.com/formium/formik/issues/2059#issuecomment-890613538\n          // without the await, formik validates with the former value\n          await setFieldValue(field.name, dataset.value, false);\n        }\n        setFieldTouched(field.name, true, true);\n      }),\n    ...field,\n    ...props,\n  };\n}\n\nexport function Select({\n  formControl,\n  inputLabel,\n  formHelperText,\n  ...selectProps\n}: SelectProps) {\n  const { error, formError, disabled, ...selectFieldProps } =\n    fieldToSelect(selectProps);\n  const { children: formHelperTextChildren, ...formHelperTextProps } =\n    formHelperText || {};\n  const shouldDisplayFormHelperText = error || formHelperTextChildren;\n\n  return (\n    <FormControl disabled={disabled} error={error} {...formControl}>\n      <InputLabel id={selectFieldProps.labelId} {...inputLabel}>\n        {selectFieldProps.label}\n      </InputLabel>\n      <MuiSelect {...selectFieldProps} />\n      {shouldDisplayFormHelperText && (\n        <FormHelperText {...formHelperTextProps}>\n          {error ? formError : formHelperTextChildren}\n        </FormHelperText>\n      )}\n    </FormControl>\n  );\n}\n\nSelect.displayName = 'FormikMaterialUISelect';\n"]},"metadata":{},"sourceType":"module"}